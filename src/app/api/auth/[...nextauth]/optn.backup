import type { NextAuthOptions } from "next-auth";
import GithubProvider from "next-auth/providers/github";
import GoogleProvider from "next-auth/providers/google";
import CredentialsProvider from "next-auth/providers/credentials";
import axios from "axios";
import NextAuth from "next-auth";

export const options: NextAuthOptions = {
  pages: {
    // signIn: "/login",
  },
  providers: [
    GithubProvider({
      clientId: process.env.GITHUB_ID!,
      clientSecret: process.env.GITHUB_SECRET!,
    }),
    GoogleProvider({
      clientId: process.env.GOOGLE_CLIENT_ID!,
      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,
    }),
    CredentialsProvider({
      // The name to display on the sign in form (e.g. "Sign in with...")
      name: "Credentials",
      // `credentials` is used to generate a form on the sign in page.
      // You can specify which fields should be submitted, by adding keys to the `credentials` object.
      // e.g. domain, username, password, 2FA token, etc.
      // You can pass any HTML attribute to the <input> tag through the object.
      credentials: {
        email: { label: "Email", type: "email", placeholder: "jsmith" },
        password: { label: "Password", type: "password" },
      },
      async authorize(credentials, req) {
        console.log(credentials?.email, credentials?.password);
        // const { email, password } = credentials as any;
        const raw = JSON.stringify({
          email: credentials?.email,
          password: credentials?.password,
        });

        console.log(raw);
        const res = await fetch("https://nimda.blazingwa.com/api/login", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: raw,
        });
        const user = await res.json();
        console.log(raw);
        if (user) {
          return user;
        } else {
          return null;
        }
      },
    }),
  ],
};
